geom_density(linewidth = 3)
ggplot(penguins, aes(x = body_mass_g, color = species,fill = species))+
geom_density(linewidth = 0.75)
ggplot(penguins, aes(x = body_mass_g, color = species,fill = species))+
geom_density(linewidth = 0.75,alpha = 0.5)
ggplot(penguins, aes(x = body_mass_g, color = species,fill = species))+
geom_density(linewidth = 0.75,alpha = 0.5)+
facet_wrap(~island)
library(tidyverse)
data(mpg)
force(mpg)
View(mpg)
head(mpg)
ggplot(mpg)+
geom_point(mapping = aes(x=displ,y=hwy))
ggplot(mpg)+
geom_point(mapping = aes(x=displ,y=hwy,color = class))
ggplot(mpg)+
geom_point(mapping = aes(x=displ,y=hwy,color = class))+
geom_smooth(method = "lm")
ggplot(mpg)+
geom_point(mapping = aes(x=displ,y=hwy,shape = class))+
ggplot(mpg)+
geom_point(mapping = aes(x=displ,y=hwy,shape = class))+
ggplot(mpg)+
geom_point(mapping = aes(x=displ,y=hwy))+
ggplot(mpg)+
geom_point(mapping = aes(x=displ,y=hwy))+
head(mpg)
head(mpg)
ggplot(mpg)+
geom_point(mapping = aes(x=displ,y=hwy))+
ggplot(mpg)+
geom_point(mapping = aes(x=displ,y=hwy))
ggplot(mpg)+
geom_point(mapping = aes(x=displ,y=hwy))
ggplot(mpg)+
geom_point(mapping = aes(x=displ,y=hwy))
ggplot(mpg)+
geom_point(mapping = aes(x=displ,y=hwy,shape = color))
ggplot(mpg)+
geom_point(mapping = aes(x=displ,y=hwy,shape = class))
ggplot(
data = penguins,
mapping = aes(x = bill_length_mm, y = bill_depth_mm,color = species)
) +
geom_point(na.rm = TRUE)+
geom_smooth(method = "lm")
geom_bar(mapping = aes(x = cut, y = freq)
geom_bar(mapping = aes(x = cut, y = freq)
geom_bar(mapping = aes(x = cut)
ggplot(data = demo) +
ggplot(data = demo) +
geom_bar(mapping = aes(x = cut))
ggplot(mpg,mapping = aes(x = displ,y = hwy))+
geom_smooth()
ggplot(mpg,mapping = aes(x = displ,y = hwy))+
geom_smooth(method = "lm")
ggplot(mpg,mapping = aes(x = displ,y = hwy))+
geom_smooth(method = "lm",mapping = aes(color = class))
))+
ggplot(mpg,mapping = aes(x = displ,y = hwy,color = class))+
ggplot(mpg,mapping = aes(x = displ,y = hwy,color = class))+
geom_smooth()+
geom_point()
ggplot(mpg,mapping = aes(x = displ,y = hwy,color = class))+
geom_point()
ggplot(mpg,mapping = aes(x = displ,y = hwy,color = class))+
geom_point()+
geom_smooth
ggplot(mpg,mapping = aes(x = displ,y = hwy,color = class))+
geom_point()+
geom_smooth()
ggplot(mpg,mapping = aes(x = displ,y = hwy,color = class))+
geom_point(mapping = aes(shape = manufacturer))+
geom_smooth()
ggplot(mpg,mapping = aes(x = displ,y = hwy))+
geom_point() + geom_smooth()+
facet_wrap(~class,nrow = 2)
ggplot(mpg,mapping = aes(x = displ,y = hwy))+
geom_point() + geom_smooth()+
facet_wrap(~class,nrow = 1)
ggplot(mpg,mapping = aes(x = displ,y = hwy))+
geom_point() + geom_smooth()+
facet_wrap(~class,nrow = 5)
ggplot(mpg,mapping = aes(x = displ,y = hwy))+
geom_point() + geom_smooth()+
facet_wrap(~class,nrow = 2)
ggplot(mpg,mapping = aes(x = displ,y = hwy))+
geom_point() + geom_smooth()+
facet_wrap(~class,nrow = 2)
ggplot(mpg,mapping = aes(x = displ,y = hwy,color = class))+
geom_point() + geom_smooth()+
facet_wrap(~class,nrow = 2)
ggplot(mpg,mapping = aes(x = displ,y = hwy,color = class))+
geom_point() + geom_smooth()+
facet_grid(.~class)
ggplot(mpg,mapping = aes(x = displ,y = hwy,color = class))+
geom_point() + geom_smooth()+
facet_grid(.~cyl)
ggplot(mpg,mapping = aes(x = displ,y = hwy,color = class))+
geom_point() + geom_smooth()+
facet_grid(class~.)
ggplot(mpg,mapping = aes(x = displ,y = hwy,color = class))+
geom_point() + geom_smooth()+
facet_grid(class~cyl)
ggplot(mpg,mapping = aes(x = displ,y = hwy,color = class))+
geom_point() + geom_smooth()+
facet_wrap(~class)
ggplot(mpg,mapping = aes(x = displ,y = hwy,color = class))+
geom_point() + geom_smooth()+
facet_grid(~class)
ggplot(mpg,mapping = aes(x = displ,y = hwy,color = class))+
geom_point() + geom_smooth()+
facet_grid(.~class)
ggplot(mpg,mapping = aes(x = displ,y = hwy,color = class))+
geom_point() + geom_smooth()+
facet_grid(~class)
ggplot(mpg,mapping = aes(x = displ,y = hwy,color = class))+
geom_point() + geom_smooth()+
facet_wrap(~class,nr=2)
library(gapminder)
data("gapminder")
force(gapminder)
gm07 <- filter(gapminder,year = 2007)
gm07 <- filter(gapminder,year == 2007)
gm |>
ggplot(mapping = aes(x = gdpPercap,y = lifeExp,color = continent))
gm07 |>
ggplot(mapping = aes(x = gdpPercap,y = lifeExp,color = continent))
gm07 |>
ggplot(mapping = aes(x = gdpPercap,y = lifeExp,color = continent))+
geom_point()
gm07 |>
ggplot(mapping = aes(x = gdpPercap,y = lifeExp,color = continent))+
geom_point(shape = continent)
View(gm07)
gm07 <- mutate(gm07,log10gdpPercap = log10(gdpPercap))
gm07 |>
ggplot(mapping = aes(x = log10gdpPercap,y = lifeExp,color = continent))+
geom_point()
gm07 |>
ggplot(mapping = aes(x = log10gdpPercap,y = lifeExp,shape = continent))+
geom_point()
gm07 |>
ggplot(mapping = aes(x = log10gdpPercap,y = lifeExp,color = continent))+
geom_point()
ggplot(penguins, aes(x = body_mass_g, color = species,fill = species))+
geom_density(linewidth = 0.75,alpha = 0.5)+
facet_wrap(~island)
library(tidyverse)
library(gapminder)
library(dplyr)
library(ggplot2)
head(gapminder)
tail(gapminder)
summary(gapminder)
gapminder07 <- filter(gapminder, year == 2007)
head(gapminder07)
summarize(gapminder, median(lifeExp))
by_cont <- group_by(gapminder07, continent)
summarise(by_cont, median(lifeExp))
medL <- summarize(by_cont, median(lifeExp))
plot(medL)
filer(gapminder07, continent == "Oceania")
filter(gapminder07, continent == "Oceania")
medLA <- gapminder %>%
filter(continent == "Africa") %>%
group_by(country) %>%
summarise(medLifeExp = median(lifeExp))
filter(medLA,medLifeExp<40)
filter(medLA,medlifeExp>60)
filter(medLA,medLifeExp>60)
cc = c("Angola","Guinea-Bissau","Sierra Leone",
"Mauritius","Reunion","Tunisia",
"Mexico")
gapminder %>%
filter(country %in% cc) %>%
ggplot(aes(x=year,y=lifeExp,color=country)) +
geom_point() +
geom_smooth(method = lm)
gapminder %>%
filter(continent == "Oceania") %>%
ggplot(aes(x=year,y=lifeExp,color=country)) +
geom_point() +
geom_smooth(method = "loess", span=3/4)
gplot(gdpPercap,lifeExp,data=gapminder07)
qplot(gdpPercap,lifeExp,data=gapminder07)
qplot(gdpPercap,lifeExp,data=gapminder07,color=continent)
ggplot(gapminder07, aes(x=gdpPercap,y=lifeExp,color = continent)) +
gplot(gapminder07, aes(x=gdpPercap,y=lifeExp,color = continent)) +
geom_point()+
geom_smooth(method = "lm", se = FALSE)
ggplot(gapminder07, aes(x=gdpPercap,y=lifeExp,color = continent)) +
geom_point()+
geom_smooth(method = "lm", se = FALSE)
library(tidyverse)
hiv <- read.csv("C:/Users/isaia/OneDrive/Year 2 - Semester 2/STAT 260 and 261/HIVprev.csv",stringsAsFactors = FALSE)
hiv <- select(hiv,Country,year,prevalence)
ggplot(hiv,aes(x = year,y = prevalence,color = prevalence,group = Country))+
geom_line()+
labs(title = "Estimated HIV Prevalence 1990-2000", y = "estimated prevalence")
ggplot(hiv,aes(x = year,y = prevalence,color = prevalence,group = Country))+
geom_line()+
labs(title = "Estimated HIV Prevalence 1990-2000", y = "estimated prevalence")
ggplot(hiv,aes(x = year,y = prevalence,group = Country)) +
geom_line(color = "blue")
ggplot(hiv,aes(x = year,y = prevalence,group = Country)) +
geom_smooth(color = "blue")
ggplot(hiv,aes(x = year,y = prevalence,color = prevalence,group = Country))+
geom_line()+
labs(title = "Estimated HIV Prevalence 1990-2000", y = "estimated prevalence")
ggplot(hiv,aes(x = year,y = prevalence,group = Country))+
geom_line(color = "grey",alpha = 0.3)+
geom_line(data=hihiv,color = "red",alpha = 0.3)+
geom_smooth(data = hiv,mapping = aes(group=NA),color = "black")+
geom_smooth(data = hihiv,mapping = aes(group=NA),color = "red")+
labs(
title = "Estimated HIV Prevalence 1990 - 2000",
y = "estimated prevalence"
)
hihiv <- filter(hiv,Country %in% cc)
ggplot(hiv,aes(x = year,y = prevalence,group = Country))+
geom_line(color = "grey",alpha = 0.3)+
geom_line(data=hihiv,color = "red",alpha = 0.3)+
geom_smooth(data = hiv,mapping = aes(group=NA),color = "black")+
geom_smooth(data = hihiv,mapping = aes(group=NA),color = "red")+
labs(
title = "Estimated HIV Prevalence 1990 - 2000",
y = "estimated prevalence"
)
ggplot(hiv,aes(x = year,y = prevalence,color = prevalence,group = Country))+
geom_line()+
labs(title = "Estimated HIV Prevalence 1990-2000", y = "estimated prevalence")
hiv %>%
ggplot(aes(x = year,y = prevalence,group = Country)) +
geom_smooth(color = "blue")
cc <- c("Botswana","Central African Republic","Congo","Kenya","Lesotho","Malawi",
"Namibia","South Africa","Swaziland","Uganda","Zambia","Zimbabwe")
hihiv <- filter(hiv,Country %in% cc)
ggplot(hiv,aes(x = year,y = prevalence,group = Country))+
geom_line(color = "grey",alpha = 0.3)+
geom_line(data=hihiv,color = "red",alpha = 0.3)+
geom_smooth(data = hiv,mapping = aes(group=NA),color = "black")+
geom_smooth(data = hihiv,mapping = aes(group=NA),color = "red")+
labs(
title = "Estimated HIV Prevalence 1990 - 2000",
y = "estimated prevalence"
)
library(tidyverse)
table1
table1 %>% mutate(rate = cases/ population * 10000)
table1 %>% mutate(year, wt = cases)
table1 %>% count(year, wt = cases)
ggplot(table1, aes(year, cases)) +
geom_line(aes(group = country), colour = "grey50") +
geom_point(aes(colour = country))
table4a
table4a %>% pivot_longer(c('1999','2000'),names_to = "year",values_to = "cases")
table4b
table4b %>% pivot_longer(c('1999','2000'),names_to="year",values_to= "cases")
table4b %>% pivot_longer(c('1999','2000'),names_to="year",values_to= "population")
table4b
tidy4b <- table4b %>% pivot_longer(c('1999','2000'),names_to="year",values_to= "population")
tidy4a <- table4a %>% pivot_longer(c('1999','2000'),names_to = "year",values_to = "cases")
left_join(tidy4a,tidy4b)
table2
tidy2 <- table2 %>% pivot_wider(names_from = type,values_from = count)
tidy2
table3
tidy3 <- table3 %>% separate(rate, into = c("cases","population"))
tidy3
tidy3 <- table3 %>% separate(rate, into = c("cases","population"),sep =  "/")
tidy3
tidy3 <- table3 %>% separate(rate, into = c("cases","population"),sep =  "/",convert = TRUE)
tidy3
stocks <- tibble(
year   = c(2015, 2015, 2015, 2015, 2016, 2016, 2016),
qtr    = c(   1,    2,    3,    4,    2,    3,    4),
return = c(1.88, 0.59, 0.35,   NA, 0.92, 0.17, 2.66)
)
stocks
stocks %>% pivot_wider(names_from = year,values_from = return)
stocks %>% pivot_wider(names_from = year,values_from = return)
library(tidyverse)
table1
table1 %>% select(country,year,cases)
table4b <- table1 %>%
select(country,year,population) %>%
pivot_wider(names_from=year,values_from=population)
table4b
table1 %>% select(country,year,population)
table2
print(table2, n = 5)
tidy2 %>% pivot_wider(names_from = type, values_from = count)
tidy ->table2 %>% pivot_wider(names_from = type, values_from = count)
tidy2 <- table2 %>% pivot_wider(names_from = type, values_from = count)
tidy2
tidy4a <- table4a %>% pivot_longer(cols = '1999','2000',names_to = "year",values_to = "cases")
tidy4a <- table4a %>% pivot_longer(c('1999','2000'),names_to = "year",values_to = "cases")
tidy4a
tabl1
table1
table1 %>% mutate(rate = cases/population * 100000)
table1 %>% group_by(year) %% summarize(sum(casezs))
table1 %>% group_by(year) %% summarize(sum(cases))
table1 %>% group_by(year) %% summarize(sum(cases))
table1 %>% group_by(year) %>% summarize(sum(cases))
table1 %>% mutate(rate = cases/ population * 10000)
table1 %>% count(year, wt = cases)
ggplot(table1,aes(x=year,y=cases,color=country)) + geom_point()
table2
table2 %>% pivot_wider(names_from = type, values_from = count) %>% group_by(country) %>% mutate(rate = cases/population )
table2 %>% pivot_wider(names_from = type, values_from = count) %>% group_by(country) %>% mutate(rate = cases/population  * 10000)
table2 %>% pivot_wider(names_from = type, values_from = count) %>% group_by(country) %>% mutate(rate = cases/population  * 100000)
table4a
table4a %>% pivot_longer(c('1999','2000'),names_to = year, values_to = count)
table4a %>% pivot_longer(c('1999','2000'),names_to = "year", values_to = "count")
table4b
tidy4 <- table4a %>% pivot_longer(c('1999','2000'),names_to = "year", values_to = "count")
tidy4b <- table4a %>% pivot_longer(c('1999','2000'),names_to = "year", values_to = "count")
tidy4a <- table4a %>% pivot_longer(c('1999','2000'),names_to = "year", values_to = "count")
tidy4b <- table4b %>% pivot_longer(c('1999','2000'),names_to = "year",values_to="population")
tidy4b
tidy4b %>% mutate(rate = tidy4a$count / population * 100000)
tidy2 %>% filter(year == 2000)
tidy2 %>% filter(year == '2000')
table2
view(bb)
setwd = "C:\Users\isaia\OneDrive\Year 2 - Semester 2"
setwd = "C:\\Users\\isaia\\OneDrive\\Year 2 - Semester 2"
bb <- read_csv("billboard.csv")
library(ggplot2)
setwd = "C:\\Users\\isaia\\OneDrive\\Year 2 - Semester 2"
bb <- read_csv("billboard.csv")
bb <-read.csv("C:/Users/isaia/OneDrive/Year 2 - Semester 2/STAT 260 and 261/billboard.csv",stringsAsFactors = FALSE)
bb
bb <-
bb %>% select(-time,-genre) %>%
rename(artist = artist.inverted)
bb %>% pivot_longer(c(x1st.week:x76th.week),names_to="week",
values_to="rank",values_drop_na=TRUE) %>%
mutate(week= parse_number(week)) %>% # replace x1st.week with 1, etc.
arrange(artist,track,week) # sorting by artist, track, week
bb %>% group_by(track)
bb %>% mutate(total_weeks = sum(week))
View(bb)
bb <- bb %>% pivot_longer(c(x1st.week:x76th.week),names_to="week",
values_to="rank",values_drop_na=TRUE) %>%
mutate(week= parse_number(week)) %>% # replace x1st.week with 1, etc.
arrange(artist,track,week) # sorting by artist, track, week
test <- select(table1,country,year,cases)
test
test %>% pivot_wider(names_from = country,values_from = year)
test %>% pivot_wider(names_from = country,values_from = year) %>% arrange(Afghanistan,Brazil,China)
test %>% pivot_wider(names_from = country,values_from = year) %>% arrange(Brazil,China)
test %>% pivot_wider(names_from = country,values_from = year) %>% arrange(Afghanistan,Brazil,China)
test %>% pivot_wider(names_from = country,values_from = year,na.rm = TRUE) %>% arrange(Afghanistan,Brazil,China)
test %>% pivot_wider(names_from = country,values_from = year,na.rm = 'TRUE') %>% arrange(Afghanistan,Brazil,China)
test %>% pivot_wider(names_from = country,values_from = year,na.rm = 'TRUE') %>% arrange(Afghanistan,Brazil,China)
stocks <- tibble( year=c(2015,2016,2016), qtr = c(1,1,2),
return = c(1.0,2.0,3.0))
stocks %>% complete(year,qtr)
install.packages("png", "/home/user/anaconda3/lib/R/library")
conda config --add channels r
conda config
conda install r-rvest
install.packages('rvest','/Users/isaia/anaconda/lib/R/library')
install.packages('rvest','/Users/isaia/anaconda/lib/R/library')
library(tidyverse)
library(rvest)
url <- "https://money.usnews.com/careers/best-jobs/rankings/the-100-best-jobs"
html <- read_html(url)
library(tidyverse)
#Can use str() function to see structure of object
#Ex
str("NO")
#Can use str() function to see structure of object
#Ex
str("NO"); str(3)
#Can use str() function to see structure of object
#Ex
str("NO"); str(3L)
#Can use str() function to see structure of object
#Ex
str("NO"); str(3.0)
0/0
-1/0
-16/0
-6/0 > -1/0
-6/0 < -1/0
-6/0 = -1/0
-6/0 == -1/0
c(1,"quart",TRUE)
list(1,"quart",TRUE)
list(1,"quart",TRUE,3)
list(1,,2"quart",TRUE,3)
list(1,,2,"quart",TRUE,3)
list(1,2,"quart",TRUE,3)
list(1,2,"quart",TRUE,c(1,2,3,4))
list <- list('height'=190,'weight'=80,'length'=50,'width'=3)
list[c(TRUE,FALSE)]
list[c(TRUE,FALSE,TRUE)]
list[FALSE]
list[c(TRUE,FALSE)]
avec = c(1,2,3)
avec
avec[1:2] <- c(9,8)
avec
library(Stat2Data)
data("PorschePrice")
head(PorschePrice)
# help(PorschePrice)
data("SpeciesArea")
head(SpeciesArea)
help(SpeciesArea)
data("Caterpillars")
- A function has input and output.
View(PorschePrice)
library(tidyverse) # includes the ggplot2 package for plotting data
ggplot(PorschePrice,aes(x=Mileage,y=Price)) +
geom_point() +
geom_smooth() +
geom_smooth(method="lm",se=FALSE, color="red")
View(SpeciesArea)
SpeciesArea <- mutate(SpeciesArea,
log10Area=log10(Area), log10Species=log10(Species))
ggplot(SpeciesArea,aes(x=log10Area,y=log10Species)) +
geom_point() + geom_smooth() +
geom_smooth(method="lm",se=FALSE, color="red")
Caterpillars <- mutate(Caterpillars,Instar = factor(Instar))
View(Caterpillars)
pfit <- lm(Price ~ Mileage, data=PorschePrice)
pfit
pfit
plot(pfit,which=1)
plot(pfit,which=2)
x <- 3+ rnorm(n)
simdat <- function(n) {
x <- 3+ rnorm(n)
y <- 1 + 2*x + x^2 + rnorm(n)
data.frame(x=x,y=y)
}
plotres <- function(dat){
ff <- lm(y~x,data=dat)
plot(ff,which=1)
}
dat <- simdat(100)
ggplot(dat,aes(x=x,y=y)) + geom_point() + geom_smooth() +
geom_smooth(method="lm",se=FALSE,color="red")
plotres(dat)
dat <- simdat(100)
plotres(dat)
dat <- simdat(100)
plotres(dat)
dat <- simdat(100)
plotres(dat)
simdat <- function(n) {
x <- 3+ rnorm(n)
y <- 1 + 2*x  + x* rnorm(n)
data.frame(x=x,y=y)
}
dat <- simdat(100)
ggplot(dat,aes(x=x,y=y)) + geom_point() + geom_smooth() +
geom_smooth(method="lm",se=FALSE,color="red")
plotres(dat)
dat <- simdat(100)
plotres(dat)
dat <- simdat(100)
plotres(dat)
dat <- simdat(100)
plotres(dat)
simdat <- function(n) {
x <- 3+ rnorm(n)
y <- 1 + 2*x  + rexp(n)
data.frame(x=x,y=y)
}
dat <- simdat(100)
plotQQ <- function(dat){
ff <- lm(y~x,data=dat)
plot(ff,which=2)
}
plotQQ(dat)
library(tidyverse)
setwd("C:\Users\isaia\OneDrive\Personal Datasets\Anime Recommendation")
setwd("C:\\Users\\isaia\\OneDrive\\Personal Datasets\\Anime Recommendation")
anime <- open_csv("anime.csv")
anime <- read_csv("anime.csv")
anime <- read_csv("animes.csv")
View(anime)
spec(anime)
anime_ordered <- arrange(anime,ranked)
head(anime_order)
head(anime_ordered)
for (i in length(anime_ordered)){
if (anime_ordered[i] == anime_ordered[i+1]){
anime_ordered <- anime_ordered[-c(i),]
}
}
anime <- read_excel("animes.xls")
library(tidyverse)
anime <- read_excel("animes.xls")
import readxl
install.package("readxk")
install.packages("readxl")
library(readxl)
anime <- read_excel("animes.xls")
anime_ordered <- arrange(anime,ranked)
head(anime_ordered)
anime <- read_excel("animes.xls")
anime_ordered <- arrange(anime,ranked)
head(anime_ordered)
